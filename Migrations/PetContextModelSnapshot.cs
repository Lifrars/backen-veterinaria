// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiVeterinaria.Migrations
{
    [DbContext(typeof(PetContext))]
    partial class PetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Cedula"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Cedula");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Cedula = 1,
                            Apellidos = "Pérez",
                            Direccion = "Calle 1",
                            Nombres = "Juan",
                            Telefono = "123456789"
                        },
                        new
                        {
                            Cedula = 2,
                            Apellidos = "García",
                            Direccion = "Calle 2",
                            Nombres = "Ana",
                            Telefono = "987654321"
                        });
                });

            modelBuilder.Entity("Mascota", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Identificacion"));

                    b.Property<int>("ClienteCedula")
                        .HasColumnType("integer");

                    b.Property<int>("Edad")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Identificacion");

                    b.HasIndex("ClienteCedula");

                    b.ToTable("Mascotas");

                    b.HasData(
                        new
                        {
                            Identificacion = 1,
                            ClienteCedula = 1,
                            Edad = 5,
                            Nombre = "Rex",
                            Peso = 30.5,
                            Raza = "Labrador"
                        },
                        new
                        {
                            Identificacion = 2,
                            ClienteCedula = 2,
                            Edad = 3,
                            Nombre = "Bella",
                            Peso = 25.0,
                            Raza = "Bulldog"
                        });
                });

            modelBuilder.Entity("Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MascotaIdentificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MascotaIdentificacion");

                    b.ToTable("Medicamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Antibiotico para infecciones",
                            Dosis = "1 pastilla cada 8 horas",
                            MascotaIdentificacion = 1,
                            Nombre = "Antibiotico A"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Para inflamaciones",
                            Dosis = "1 pastilla cada 12 horas",
                            MascotaIdentificacion = 1,
                            Nombre = "Antiinflamatorio B"
                        });
                });

            modelBuilder.Entity("Mascota", b =>
                {
                    b.HasOne("Cliente", "Cliente")
                        .WithMany("Mascotas")
                        .HasForeignKey("ClienteCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Medicamento", b =>
                {
                    b.HasOne("Mascota", "Mascota")
                        .WithMany("Medicamentos")
                        .HasForeignKey("MascotaIdentificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Mascota", b =>
                {
                    b.Navigation("Medicamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
